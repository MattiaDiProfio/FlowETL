root INFO - 14/04/2025 11:49:35 AM : Connected to broker
kafka.consumer.subscription_state INFO - 14/04/2025 11:49:35 AM : Updated partition assignment: [TopicPartition(topic='optimalPlans', partition=0)]
kafka.conn INFO - 14/04/2025 11:49:35 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 14/04/2025 11:49:35 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 14/04/2025 11:49:35 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 14/04/2025 11:50:57 AM : Received optimal plan -> ['flight_routes_source.json', {'associated_key': None}, {'standardiseFeatures': '```python\n{\n    ("dst_lon",): ("destination_longitude",),\n    ("src_lon",): ("source_longitude",),\n    ("dst_lat",): ("destination_latitude",),\n    ("src_lat",): ("source_latitude",),\n    ("dst",): ("destination_airport_code", "destination"),\n    ("src",): ("source_airport_code", "source")\n}\n```'}, 'missingValues/impute', 'duplicates', 'outliers/impute', {'standardiseValues': '```python\ndef transform_table(input_table):\n    # Extract header and data\n    header = input_table[0]\n    data = input_table[1:]\n    \n    # Create new output table with the required columns\n    output_header = [\n        "destination_longitude",\n        "source_longitude",\n        "destination_latitude",\n        "destination_airport_code",\n        "source_latitude",\n        "source",\n        "source_airport_code",\n        "destination"\n    ]\n    \n    output_data = []\n    \n    # Define column indices for easy access\n    dest_lon_idx = header.index("destination_longitude")\n    src_lon_idx = header.index("source_longitude")\n    dest_lat_idx = header.index("destination_latitude")\n    src_lat_idx = header.index("source_latitude")\n    dest_airport_idx = header.index("destination_airport_code")\n    src_airport_idx = header.index("source_airport_code")\n    \n    for row in data:\n        # Extract the city name from airport code\n        dest_airport_code = row[dest_airport_idx].split()[-1]\n        dest_city = row[dest_airport_idx].split()[0]\n        \n        src_airport_code = row[src_airport_idx].split()[-1]\n        src_city = row[src_airport_idx].split()[0]\n        \n        new_row = [\n            row[dest_lon_idx],  # destination_longitude\n            row[src_lon_idx],   # source_longitude\n            row[dest_lat_idx],  # destination_latitude\n            dest_airport_code,  # destination_airport_code\n            row[src_lat_idx],   # source_latitude\n            src_city,           # source\n            src_airport_code,   # source_airport_code\n            dest_city           # destination\n        ]\n        \n        output_data.append(new_row)\n    \n    return [output_header] + output_data\n```'}]
root INFO - 14/04/2025 11:50:57 AM : Published the following metrics to Reporter : {'from': 'pre_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 0.0}, 'outliers': {'numerical_outliers_percent': 0.399}, 'duplicates': {'duplicate_rows_percent': 0.012}, 'dq': 0.999}}
kafka.conn INFO - 14/04/2025 11:50:57 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 14/04/2025 11:50:57 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 14/04/2025 11:50:57 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 14/04/2025 11:50:57 AM : Applied plan to file 'input\source\flight_routes_source.json'
root INFO - 14/04/2025 11:50:58 AM : Successfully loaded the transformed file to '\output'
root INFO - 14/04/2025 11:50:58 AM : Published the following metrics to Reporter : {'from': 'post_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 0.0}, 'outliers': {'numerical_outliers_percent': 0.181}, 'duplicates': {'duplicate_rows_percent': 0.012}, 'dq': 0.999}}
kafka.producer.kafka INFO - 14/04/2025 11:50:58 AM : Closing the Kafka producer with 4294967.0 secs timeout.
kafka.conn INFO - 14/04/2025 11:50:58 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
kafka.conn INFO - 14/04/2025 11:50:58 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
