root INFO - 07/04/2025 11:58:12 AM : Connected to broker
kafka.consumer.subscription_state INFO - 07/04/2025 11:58:12 AM : Updated partition assignment: [TopicPartition(topic='optimalPlans', partition=0)]
kafka.conn INFO - 07/04/2025 11:58:12 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 07/04/2025 11:58:12 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 07/04/2025 11:58:12 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 07/04/2025 11:59:36 AM : Received optimal plan -> ['netflix_users_source.csv', {'associated_key': None}, {'standardiseFeatures': '```python\n{\n    ("User_ID",): ("id",),\n    ("Name",): ("first_name", "last_name"),\n    ("Age",): ("age",),\n    ("Country",): ("country_name",),\n    ("Subscription_Type",): ("subscription",),\n    ("Watch_Time_Hours",): ("watch_time_hours",),\n    ("Favorite_Genre",): ("favourite_genre",),\n    ("Last_Login",): ("last_access",)\n}\n```'}, 'missingValues/impute', 'duplicates', 'outliers/impute', {'standardiseValues': '```python\ndef transform_table(input_table):\n    # Extract headers and data\n    headers = input_table[0]\n    data = input_table[1:]\n    \n    # Initialize output table with headers\n    output_table = [["id", "first_name", "last_name", "age", "country_name", "subscription", \n                     "watch_time_hours", "favourite_genre", "last_access"]]\n    \n    for row in data:\n        # Create new row with the same structure as the output headers\n        new_row = ["", "", "", "", "", "", "", "", ""]\n        \n        # Process each column from the input\n        for i, value in enumerate(row):\n            if value == \'_ext_\':\n                continue\n            \n            col_name = headers[i]\n            \n            # Process id\n            if col_name == \'id\' and value:\n                try:\n                    new_row[0] = str(int(float(value)))\n                except (ValueError, TypeError):\n                    new_row[0] = value\n            \n            # Process first_name and split into first_name and last_name\n            elif col_name == \'first_name\' and value:\n                name_parts = value.split()\n                if name_parts:\n                    new_row[1] = name_parts[0]  # First name\n                    if len(name_parts) > 1:\n                        new_row[2] = name_parts[-1]  # Last name\n            \n            # Process age\n            elif col_name == \'age\' and value:\n                try:\n                    new_row[3] = str(int(float(value)))\n                except (ValueError, TypeError):\n                    new_row[3] = value\n            \n            # Process country_name\n            elif col_name == \'country_name\' and value:\n                new_row[4] = value\n            \n            # Process subscription\n            elif col_name == \'subscription\' and value:\n                new_row[5] = value\n            \n            # Process watch_time_hours\n            elif col_name == \'watch_time_hours\' and value:\n                try:\n                    new_row[6] = str(int(float(value)))\n                except (ValueError, TypeError):\n                    new_row[6] = value\n            \n            # Process favourite_genre\n            elif col_name == \'favourite_genre\' and value:\n                new_row[7] = value\n            \n            # Process last_access\n            elif col_name == \'last_access\' and value:\n                try:\n                    # Convert from YYYY-MM-DD to DD-Mon-YY\n                    parts = value.split(\'-\')\n                    if len(parts) == 3:\n                        year, month, day = parts\n                        month_names = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", \n                                       "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]\n                        month_num = int(month)\n                        if 1 <= month_num <= 12:\n                            month_name = month_names[month_num - 1]\n                            new_row[8] = f"{day}-{month_name}-{year[2:]}"\n                        else:\n                            new_row[8] = value\n                    else:\n                        new_row[8] = value\n                except (ValueError, IndexError):\n                    new_row[8] = value\n        \n        # Only add rows that have at least one non-empty field\n        if any(new_row):\n            output_table.append(new_row)\n    \n    return output_table\n```'}]
root INFO - 07/04/2025 11:59:36 AM : Published the following metrics to Reporter : {'from': 'pre_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 40.234}, 'outliers': {'numerical_outliers_percent': 4.024}, 'duplicates': {'duplicate_rows_percent': 16.533}, 'dq': 0.797}}
kafka.conn INFO - 07/04/2025 11:59:36 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 07/04/2025 11:59:36 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 07/04/2025 11:59:36 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 07/04/2025 11:59:37 AM : Applied plan to file 'input\source\netflix_users_source.csv'
root INFO - 07/04/2025 11:59:37 AM : Successfully loaded the transformed file to '\output'
root INFO - 07/04/2025 11:59:37 AM : Published the following metrics to Reporter : {'from': 'post_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 4.485}, 'outliers': {'numerical_outliers_percent': 0.0}, 'duplicates': {'duplicate_rows_percent': 0.655}, 'dq': 0.983}}
kafka.producer.kafka INFO - 07/04/2025 11:59:37 AM : Closing the Kafka producer with 4294967.0 secs timeout.
kafka.conn INFO - 07/04/2025 11:59:37 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
kafka.conn INFO - 07/04/2025 11:59:37 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
