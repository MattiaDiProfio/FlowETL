root INFO - 07/04/2025 11:49:05 AM : Connected to broker
kafka.consumer.subscription_state INFO - 07/04/2025 11:49:05 AM : Updated partition assignment: [TopicPartition(topic='optimalPlans', partition=0)]
kafka.conn INFO - 07/04/2025 11:49:05 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 07/04/2025 11:49:05 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 07/04/2025 11:49:05 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 07/04/2025 11:50:22 AM : Received optimal plan -> ['chess_games_source.csv', {'associated_key': None}, {'standardiseFeatures': '```python\n{\n    ("id",): ("game_id",),\n    ("rated",): ("is_rated",),\n    ("created_at",): ("start_time",),\n    ("last_move_at",): ("end_time",),\n    ("turns",): ("turns_taken",),\n    ("victory_status",): ("victory_status",),\n    ("winner",): ("winner",),\n    ("white_id",): ("w_id",),\n    ("white_rating",): ("w_rating",),\n    ("black_id",): ("b_id",),\n    ("black_rating",): ("b_rating",),\n    ("moves",): ("moves_sequence",),\n    ("opening_name",): ("opening_strategy_name",),\n    ("increment_code",): (),\n    ("opening_eco",): (),\n    ("opening_ply",): ()\n}\n```'}, 'missingValues/impute', 'duplicates', 'outliers/impute', {'standardiseValues': '```python\ndef transform_table(input_table):\n    # Skip header row\n    header = input_table[0]\n    data_rows = input_table[1:]\n    \n    transformed_rows = []\n    for row in data_rows:\n        # Create a dictionary for easier data access\n        row_dict = {header[i]: row[i] for i in range(len(header))}\n        \n        # Transform is_rated to boolean represented as "0" or "1"\n        is_rated = "0"\n        if row_dict.get("is_rated", "").lower() == "true":\n            is_rated = "1"\n        \n        # Transform winner to single letter\n        winner_value = row_dict.get("winner", "")\n        if winner_value.lower() == "white":\n            winner = "w"\n        elif winner_value.lower() == "black":\n            winner = "b"\n        elif winner_value.lower() == "draw":\n            winner = "draw"\n        else:\n            winner = winner_value\n            \n        # Format move sequences with hyphens\n        moves = row_dict.get("moves_sequence", "")\n        if moves:\n            moves = "-".join(moves.split())\n        \n        # Create transformed row\n        transformed_row = [\n            row_dict.get("game_id", ""),\n            is_rated,\n            row_dict.get("start_time", ""),\n            row_dict.get("end_time", ""),\n            row_dict.get("turns_taken", ""),\n            row_dict.get("victory_status", ""),\n            winner,\n            row_dict.get("w_id", ""),\n            row_dict.get("w_rating", ""),\n            row_dict.get("b_id", ""),\n            row_dict.get("b_rating", ""),\n            moves,\n            row_dict.get("opening_strategy_name", "")\n        ]\n        \n        transformed_rows.append(transformed_row)\n    \n    # Return with the header\n    return [header] + transformed_rows\n```'}]
root INFO - 07/04/2025 11:50:23 AM : Published the following metrics to Reporter : {'from': 'pre_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 40.08}, 'outliers': {'numerical_outliers_percent': 2.138}, 'duplicates': {'duplicate_rows_percent': 16.74}, 'dq': 0.803}}
kafka.conn INFO - 07/04/2025 11:50:23 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 07/04/2025 11:50:23 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 07/04/2025 11:50:23 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 07/04/2025 11:50:24 AM : Applied plan to file 'input\source\chess_games_source.csv'
root INFO - 07/04/2025 11:50:24 AM : Successfully loaded the transformed file to '\output'
root INFO - 07/04/2025 11:50:24 AM : Published the following metrics to Reporter : {'from': 'post_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 0.0}, 'outliers': {'numerical_outliers_percent': 0.0}, 'duplicates': {'duplicate_rows_percent': 0.005}, 'dq': 1.0}}
kafka.producer.kafka INFO - 07/04/2025 11:50:24 AM : Closing the Kafka producer with 4294967.0 secs timeout.
kafka.conn INFO - 07/04/2025 11:50:24 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
kafka.conn INFO - 07/04/2025 11:50:24 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
