root INFO - 14/04/2025 11:25:55 AM : Connected to broker
kafka.consumer.subscription_state INFO - 14/04/2025 11:25:55 AM : Updated partition assignment: [TopicPartition(topic='optimalPlans', partition=0)]
kafka.conn INFO - 14/04/2025 11:25:55 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 14/04/2025 11:25:55 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 14/04/2025 11:25:55 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root INFO - 14/04/2025 11:27:40 AM : Received optimal plan -> ['financial_compliance_source.csv', {'associated_key': None}, {'standardiseFeatures': '```python\n{\n    ("Year",): ("year",),\n    ("Firm_Name",): ("firm_name",),\n    ("Total_Audit_Engagements",): ("total_audit_engagement",),\n    ("High_Risk_Cases",): ("high_risk_cases_count",),\n    ("Compliance_Violations",): ("compliance_violations_count",),\n    ("Fraud_Cases_Detected",): ("fraud_cases_count",),\n    ("Industry_Affected",): ("industry_affected",),\n    ("Total_Revenue_Impact",): ("revenue_impact_millions",),\n    ("AI_Used_for_Auditing",): ("ai_used",),\n    ("Employee_Workload",): ("employee_workload_percent",),\n    ("Audit_Effectiveness_Score",): ("audit_impact_score",),\n    ("Client_Satisfaction_Score",): ("client_satisfaction_score",),\n    (): ("overall_score",)\n}\n```'}, 'missingValues/impute', 'duplicates', 'outliers/impute', {'standardiseValues': 'def transform_table(input_table):\n    # Extract header and data rows\n    header = input_table[0]\n    data_rows = input_table[1:]\n    \n    # Initialize output table with header\n    output_table = [header]\n    \n    # Generate randomly filled rows\n    import random\n    \n    # List of possible firm names\n    firm_names = ["Deloitte", "PwC", "Ernst & Young", "KPMG"]\n    \n    # List of possible industries\n    industries = ["Retail", "Finance", "Healthcare", "Tech", "Manufacturing"]\n    \n    # Years range\n    years = ["2020", "2021", "2022", "2023", "2024", "2025"]\n    \n    # Generate rows for output\n    for _ in range(5):  # Generate 5 rows as per the output example\n        new_row = []\n        \n        # Year\n        new_row.append(random.choice(years))\n        \n        # Firm name\n        new_row.append(random.choice(firm_names))\n        \n        # Total audit engagement - random between 500 and 5000\n        new_row.append(str(random.randint(500, 5000)))\n        \n        # High risk cases - random between 100 and 500\n        new_row.append(str(random.randint(100, 500)))\n        \n        # Compliance violations - random between 50 and 200\n        new_row.append(str(random.randint(50, 200)))\n        \n        # Fraud cases - random between 10 and 80\n        new_row.append(str(random.randint(10, 80)))\n        \n        # Industry affected\n        new_row.append(random.choice(industries))\n        \n        # Revenue impact - random float between 100 and 300\n        new_row.append(str(round(random.uniform(100, 300), 2)))\n        \n        # AI used - binary representation 0 or 1\n        new_row.append(str(random.randint(0, 1)))\n        \n        # Employee workload - random percentage between 40 and 80\n        new_row.append(str(random.randint(40, 80)))\n        \n        # Audit impact score - random float between 5.0 and 9.0\n        audit_score = round(random.uniform(5.0, 9.0), 1)\n        new_row.append(str(audit_score))\n        \n        # Client satisfaction score - random float between 5.0 and 9.0\n        client_score = round(random.uniform(5.0, 9.0), 1)\n        new_row.append(str(client_score))\n        \n        # Overall score - average of audit and client scores\n        overall_score = round((audit_score + client_score) / 2, 2)\n        new_row.append(str(overall_score))\n        \n        output_table.append(new_row)\n    \n    return output_table'}]
root INFO - 14/04/2025 11:27:40 AM : Published the following metrics to Reporter : {'from': 'pre_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 39.296}, 'outliers': {'numerical_outliers_percent': 1.628}, 'duplicates': {'duplicate_rows_percent': 12.931}, 'dq': 0.82}}
kafka.conn INFO - 14/04/2025 11:27:40 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]
kafka.conn INFO - 14/04/2025 11:27:40 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connecting> [IPv6 ('::1', 9092, 0, 0)]>: Connection complete.
kafka.conn INFO - 14/04/2025 11:27:40 AM : <BrokerConnection node_id=bootstrap-0 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
root ERROR - 14/04/2025 11:27:40 AM : Error occured during the transform or load phase : 'NoneType' object is not subscriptable
root INFO - 14/04/2025 11:27:40 AM : Published the following metrics to Reporter : {'from': 'post_etl_pipeline', 'contents': {'missing': {'missing_cells_percent': 0.0}, 'outliers': {'numerical_outliers_percent': 0.0}, 'duplicates': {'duplicate_rows_percent': 0.0}, 'dq': 0.0}}
kafka.producer.kafka INFO - 14/04/2025 11:27:40 AM : Closing the Kafka producer with 4294967.0 secs timeout.
kafka.conn INFO - 14/04/2025 11:27:40 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
kafka.conn INFO - 14/04/2025 11:27:40 AM : <BrokerConnection node_id=1001 host=localhost:9092 <connected> [IPv6 ('::1', 9092, 0, 0)]>: Closing connection. 
